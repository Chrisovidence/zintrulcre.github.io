<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on ZinBlog</title>
    <link>http://zintrulcre.vip/tags/algorithm/</link>
    <description>Recent content in Algorithm on ZinBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 06 Feb 2019 22:11:18 +1100</lastBuildDate>
    
	<atom:link href="http://zintrulcre.vip/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LeetCode 560. 和为K的子数组</title>
      <link>http://zintrulcre.vip/posts/leetcode/560/</link>
      <pubDate>Wed, 06 Feb 2019 22:11:18 +1100</pubDate>
      
      <guid>http://zintrulcre.vip/posts/leetcode/560/</guid>
      <description>560. 和为K的子数组 给定一个整数数组和一个整数 k，你需要找到该数组中和为 k 的连续的子数组的个数。 示例 1 : 输入:nums = [1,1,1], k = 2 输出: 2 , [1,1] 与 [1,1]</description>
    </item>
    
    <item>
      <title>Machine Learning Algorithm Implementation (3): Perceptron</title>
      <link>http://zintrulcre.vip/posts/machine-learning/machine-learning-algorithm-implementation-3/</link>
      <pubDate>Tue, 05 Feb 2019 00:58:34 +1100</pubDate>
      
      <guid>http://zintrulcre.vip/posts/machine-learning/machine-learning-algorithm-implementation-3/</guid>
      <description>Click here to see the implementation in Jupyter Notebook
Perceptron  Goal
 implement the perceptron (a building block of neural networks) to assess how the perceptron behaves in two distinct scenarios (separable vs. non-separable data)  Verification
 compare our output to the output of using LogisticRegression function from library sklearn.    1. Import Library Firstly we should import the relevant libraries (numpy, matplotlib, etc.).
%matplotlib inline import numpy as np import matplotlib.</description>
    </item>
    
    <item>
      <title>Machine Learning Algorithm Implementation (2): Logistic Regression</title>
      <link>http://zintrulcre.vip/posts/machine-learning/machine-learning-algorithm-implementation-2/</link>
      <pubDate>Fri, 01 Feb 2019 14:00:16 +1100</pubDate>
      
      <guid>http://zintrulcre.vip/posts/machine-learning/machine-learning-algorithm-implementation-2/</guid>
      <description>Click here to see the implementation in Jupyter Notebook
Logistic Regression  Goal  implementing L2-regularised logistic regression, using scipy and numpy library apply polynomial basis expansion and L2 regularisation.  Implementation Methods  hill-climbing algorithm  Verification  compare our output to the output of using library sklearn.    1. Import Library Firstly we should import the relevant libraries (numpy, matplotlib, etc.).
%matplotlib inline import numpy as np import matplotlib.</description>
    </item>
    
  </channel>
</rss>