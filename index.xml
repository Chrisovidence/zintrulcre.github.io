<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZintrulCre</title>
    <link>https://zintrulcre.vip/</link>
    <description>Recent content on ZintrulCre</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 27 Mar 2019 21:11:32 +1100</lastBuildDate>
    
	<atom:link href="https://zintrulcre.vip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43; Interview Summary</title>
      <link>https://zintrulcre.vip/posts/c&#43;&#43;/c&#43;&#43;-interview-summary/</link>
      <pubDate>Wed, 27 Mar 2019 21:11:32 +1100</pubDate>
      
      <guid>https://zintrulcre.vip/posts/c&#43;&#43;/c&#43;&#43;-interview-summary/</guid>
      <description>C++ Interview Summary 语法 1. Static关键字 面向过程 （1）静态全局变量 静态全局变量的作用域在当前cpp文件，可以在其他cpp文件中使用extern关键字声</description>
    </item>
    
    <item>
      <title>Google Kick Start 2019 Round A</title>
      <link>https://zintrulcre.vip/posts/kick-start/google-kick-start-2019-round-a/</link>
      <pubDate>Tue, 26 Mar 2019 14:25:36 +1100</pubDate>
      
      <guid>https://zintrulcre.vip/posts/kick-start/google-kick-start-2019-round-a/</guid>
      <description>Google Kick Start 2019 Round A Training (7pts, 13pts) 解析 一道常见的数组题。简单翻译一下就是一共有N个人，从中选P个人，计算这P个人中 skill rating 的最大值与其他人的 skill rating 的差值之和。 \[ \sum_{i}^{j}</description>
    </item>
    
    <item>
      <title>Methods to Prevent Overfitting in Deep Learning</title>
      <link>https://zintrulcre.vip/posts/deep-learning/methods-to-prevent-overfitting-in-deep-learning/</link>
      <pubDate>Wed, 20 Mar 2019 09:55:04 +1100</pubDate>
      
      <guid>https://zintrulcre.vip/posts/deep-learning/methods-to-prevent-overfitting-in-deep-learning/</guid>
      <description>Methods to Prevent Overfitting in Deep Learning Overfitting Overfitting refers to that when a model fits the training data well but cannot predict the test data correctly, we may say that the model lacks the ability of generalization. It is important to figure out how it happens, and how we can prevent overfitting from the very beginning.
Detect Overfitting The simplest way to detect overfitting is to split the dataset into two parts: the training set for training the model, and the test set for testing the accuracy of the model on a dataset that it has never seen before.</description>
    </item>
    
    <item>
      <title>Notebooks</title>
      <link>https://zintrulcre.vip/notebooks/</link>
      <pubDate>Sun, 17 Mar 2019 11:48:06 +1100</pubDate>
      
      <guid>https://zintrulcre.vip/notebooks/</guid>
      <description> Python
 Command
 Deep Learning
 Cluster and Cloud Computing
 Natural Language Processing
  </description>
    </item>
    
    <item>
      <title>LeetCode 208 实现 Trie (前缀树)</title>
      <link>https://zintrulcre.vip/posts/leetcode/208/</link>
      <pubDate>Fri, 15 Mar 2019 10:56:12 +1100</pubDate>
      
      <guid>https://zintrulcre.vip/posts/leetcode/208/</guid>
      <description>LeetCode 208 实现 Trie (前缀树) 实现一个 Trie (前缀树)，包含 insert, search, 和 startsWith 这三个操作。 示例: Trie trie = new Trie(); trie.insert(&amp;#34;apple&amp;#34;); trie.search(&amp;#34;apple&amp;#34;); // 返回 true trie.search(&amp;#34;app&amp;#34;); // 返回 false trie.startsWith(&amp;#34;app&amp;#34;); // 返回 true trie.insert(&amp;#34;app&amp;#34;); trie.search(&amp;#34;app&amp;#34;); // 返回 true 说明: 你可以假</description>
    </item>
    
    <item>
      <title>LeetCode 98 验证二叉搜索树</title>
      <link>https://zintrulcre.vip/posts/leetcode/98/</link>
      <pubDate>Tue, 12 Feb 2019 21:44:35 +1100</pubDate>
      
      <guid>https://zintrulcre.vip/posts/leetcode/98/</guid>
      <description>LeetCode 98 验证二叉搜索树 给定一个二叉树，判断其是否是一个有效的二叉搜索树。 假设一个二叉搜索树具有如下特征： 节点的左子树只包含小于当前节点的数。 节点</description>
    </item>
    
    <item>
      <title>LeetCode 560 和为K的子数组</title>
      <link>https://zintrulcre.vip/posts/leetcode/560/</link>
      <pubDate>Wed, 06 Feb 2019 22:11:18 +1100</pubDate>
      
      <guid>https://zintrulcre.vip/posts/leetcode/560/</guid>
      <description>LeetCode 560 和为K的子数组 给定一个整数数组和一个整数 k，你需要找到该数组中和为 k 的连续的子数组的个数。 示例 1: 输入:nums = [1,1,1], k = 2 输出: 2 , [1,1] 与 [1,1]</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://zintrulcre.vip/projects/</link>
      <pubDate>Mon, 04 Feb 2019 23:26:26 +1100</pubDate>
      
      <guid>https://zintrulcre.vip/projects/</guid>
      <description>Refactoring&amp;hellip;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://zintrulcre.vip/about/</link>
      <pubDate>Sat, 26 Jan 2019 12:21:35 +1100</pubDate>
      
      <guid>https://zintrulcre.vip/about/</guid>
      <description>Refactoring&amp;hellip;</description>
    </item>
    
    <item>
      <title>C&#43;&#43;智能指针（3）：shared_ptr</title>
      <link>https://zintrulcre.vip/posts/c&#43;&#43;/c&#43;&#43;-smart-pointer-3/</link>
      <pubDate>Fri, 25 Jan 2019 17:47:38 +1100</pubDate>
      
      <guid>https://zintrulcre.vip/posts/c&#43;&#43;/c&#43;&#43;-smart-pointer-3/</guid>
      <description>C++智能指针（3）：shared_ptr 分析 UniquePointer对象只能绑定单个指针，要实现指针的自动管理和销毁需要引入计数器 private: int *counter;</description>
    </item>
    
  </channel>
</rss>